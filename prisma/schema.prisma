// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}


model Log {
  id        Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  date      DateTime
  type      Int

  writing   WritingLog[]
  expenses  ExpenseLog[]
  movies    MovieLog[]
  books     BookLog[]
  photos    PhotoLog[]
  foods     FoodLog[]
}

model WritingLog {
  id      Int      @default(autoincrement()) @id
  comment String

  log    Log      @relation(fields: [idLog], references: [id])
  idLog  Int
}

model ExpenseLog {
  id         Int      @default(autoincrement()) @id
  amount     Float
  idType     Int
  comment    String
  idCurrency Int

  log    Log      @relation(fields: [idLog], references: [id])
  idLog  Int

  type   ExpenseType  @relation(fields: [idType], references: [id])
}

model ExpenseType {
  id      Int      @default(autoincrement()) @id
  name    String

  expenses ExpenseLog[]
}

model MovieLog {
  id      Int      @default(autoincrement()) @id
  title   String
  comment String
  rating  Int

  log    Log      @relation(fields: [idLog], references: [id])
  idLog  Int
}

model BookLog {
  id      Int      @default(autoincrement()) @id
  title   String
  comment String
  rating  Int

  log    Log      @relation(fields: [idLog], references: [id])
  idLog  Int
}

model PhotoLog {
  id       Int      @default(autoincrement()) @id
  comment  String
  iso      Int
  aperture Float
  speed    Float
  film     String?

  log    Log      @relation(fields: [idLog], references: [id])
  idLog  Int
}

model FoodLog {
  id     Int      @default(autoincrement()) @id

  qty       Int
  name      String
  code      Int

  energy        Int
  fat           Int
  saturated     Int
  carbohydrates Int
  sugar         Int
  fiber         Int
  proteins      Int
  salt          Int
  serving       Int
  isIncomplete  Boolean

  log    Log      @relation(fields: [idLog], references: [id])
  idLog  Int

  foods  FoodLogProduct[]
}

model FoodLogProduct {
  id        Int     @default(autoincrement()) @id

  qty       Int
  name      String
  code      Int

  energy        Int
  fat           Int
  saturated     Int
  carbohydrates Int
  sugar         Int
  fiber         Int
  proteins      Int
  salt          Int
  serving       Int
  isIncomplete  Boolean

  foodLog    FoodLog @relation(fields: [idFoodLog], references: [id])
  idFoodLog  Int
}
