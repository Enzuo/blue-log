// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}


model Log {
  id        Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  date      DateTime
  type      Int

  writing   LogWriting[]
  expenses  LogExpense[]
  movies    LogMovie[]
  books     LogBook[]
  photos    LogPhoto[]
  foods     LogFood[]
}

model LogWriting {
  id      Int      @default(autoincrement()) @id
  idLog   Int
  comment String

  log    Log      @relation(fields: [idLog], references: [id])
}

model LogExpense {
  id         Int      @default(autoincrement()) @id
  idLog      Int
  amount     Float
  idCategory Int
  comment    String
  idCurrency Int

  log      Log      @relation(fields: [idLog], references: [id])
  category ExpenseCategory  @relation(fields: [idCategory], references: [id])
}

model ExpenseCategory {
  id      Int      @default(autoincrement()) @id
  name    String
  icon    String

  expenses LogExpense[]
}

model LogMovie {
  id      Int      @default(autoincrement()) @id
  idLog   Int
  title   String
  comment String
  rating  Int

  log     Log      @relation(fields: [idLog], references: [id])
}

model LogBook {
  id      Int      @default(autoincrement()) @id
  idLog   Int
  title   String
  comment String
  rating  Int

  log     Log      @relation(fields: [idLog], references: [id])
}

model LogPhoto {
  id       Int      @default(autoincrement()) @id
  idLog    Int
  comment  String
  iso      Int
  aperture Float
  speed    Float
  film     String?

  log    Log      @relation(fields: [idLog], references: [id])
}

model LogFood {
  id        Int      @default(autoincrement()) @id
  idLog     Int

  qty       Int
  name      String
  code      Int

  energy        Int
  fat           Int
  saturated     Int
  carbohydrates Int
  sugar         Int
  fiber         Int
  proteins      Int
  salt          Int
  serving       Int
  isIncomplete  Boolean

  log    Log      @relation(fields: [idLog], references: [id])
  foods  Product[]
}

model Product {
  id        Int     @default(autoincrement()) @id
  idFoodLog Int

  qty       Int
  name      String
  code      Int

  energy        Int
  fat           Int
  saturated     Int
  carbohydrates Int
  sugar         Int
  fiber         Int
  proteins      Int
  salt          Int
  serving       Int
  isIncomplete  Boolean

  foodLog    LogFood @relation(fields: [idFoodLog], references: [id])
}
